进程：
　　优点：可以利用计算机多核资源，进行并发处理
　　　　　空间独立，数据安全
　　　　　有专门的进程间通信，通信方便
　　缺点：创建过程消耗资源多，
　　　　　大量进程消耗资源多
线程：
　　优点：创建简单，创建删除简单，消耗资源少
　　　　　使用全局变量通信方便
　　　　　也能利用计算机多核进行操作
　　缺点：通信过程中要同步互斥机制，逻辑复杂，导致死锁
　　　　　空间不独立，数据容易被修改
　　　　　python线程有GIL问题

二者联系：
　　　二者都是多任务编程方式，都可以利用计算机多核
　　　一个进程可以包含多个线程分支
　　　多个线程可以共享进程资源
　　　进程和线程都有自己的属性，如ID 和命令集

使用场景：
　　　某个单任务他的并发较多，此时多线程消耗资源较少
　　　不同的独立的任务模块，使用进程比较好管理
　　　在通信和数据处理上考虑，如果同步互斥操作比较复杂，此时多线程比较复杂，此时多线程容易较处理错误